version: 2
jobs:
  build:
    docker:
      - image: node:10.15.0
      - image: selenium/standalone-chrome
      - image: redis:4.0.1
      - image: postgres:9.6.2
        environment:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
    steps:
      - checkout

      # download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run repo tests
      # - run: npm run test


      # run api tests in docker-compose
      - setup_remote_docker

      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

      - run:
          name: Start docker resources
          command: |
            set -e
            docker-compose -f circleci-docker-compose.yml up -d redis
            docker-compose -f circleci-docker-compose.yml up -d chrome
            docker-compose -f circleci-docker-compose.yml up -d postgres
            docker-compose -f circleci-docker-compose.yml up -d epochtalk
            docker-compose -f circleci-docker-compose.yml exec epochtalk /bin/bash -c "until node cli create-user admin admin@epochtalk.com --password password --admin; do sleep 5; done"
            docker-compose -f circleci-docker-compose.yml up -d epoch

      - run:
          name: run test
          command: |
            set -eo pipefail
            docker-compose -f circleci-docker-compose.yml up --exit-code-from epochtalk-api-tests epochtalk-api-tests

      - run:
          name: run test-client
          command: |
            set -eo pipefail
            docker-compose -f circleci-docker-compose.yml up --exit-code-from protractor protractor

      - run:
          name: "Failure: output container logs to console"
          command: |
            docker-compose -f circleci-docker-compose.yml logs epochtalk
          when: on_fail

      - run:
          name: "Failure: output directory to console"
          command: |
            docker-compose -f circleci-docker-compose.yml exec epochtalk /bin/bash -c "ls; pwd"
          when: on_fail
